---
# - name: Template ACM resources 
#   template:
#     src: "acm-cluster-create.yaml.j2"
#     dest: "acm-cluster-create.yaml"

# - name: Template OpenShift install config
#   template:
#     src: "install-config.yaml.j2"
#     dest: "install-config.yaml"

# - name: Create {{ project_name }} namespace
#   kubernetes.core.k8s:
#     api_key: "{{ openshift_service_account }}"
#     host: "{{ openshift_server }}"
#     api_version: project.openshift.io/v1
#     kind: Project
#     name: "{{ cluster_name }}"
#     state: present

# - name: Login with openshift
#   shell:
#     cmd: oc login --token="{{ openshift_service_account }}" --server="{{ openshift_server }}"

# - name: Navigate to ansible-automation-platform namespace
#   shell:
#     cmd: oc project ansible-automation-platform

# - name: Create secret from the install-config template
#   shell:
#     cmd: oc create secret generic {{ cluster_name }}-install-config --from-file=install-config.yaml=install-config.yaml -n "{{ cluster_name }}"

# - name: Create cluster resources for ACM
#   shell:
#     cmd: oc apply -f acm-cluster-create.yaml
      

- name: Install RHSSO Operator
  k8s:
    definition: "{{ lookup('kubernetes.core.kustomize', dir='acm_cluster/files/rhsso-operator/base') }}"  

- name: Wait till the Subscription is created
  kubernetes.core.k8s_info:
    kind: Sub
    wait: yes
    name: rhsso-operator
    namespace: sso
    wait_timeout: 3
    wait_conditon:
      type: CatalogSourcesUnhealthy
      status: false
      
- name: Create Keycloak Realm
  k8s:
    state: present
    name: openshift-realm
    definition:
      kind: KeycloakRealm
      apiVersion: keycloak.org/v1alpha1
      spec:
        instanceSelector:
        matchLabels:
          app: sso
        realm:
          clients:
            - enabled: true
              clientAuthenticatorType: client-secret
              redirectUris:
                - >-
                  "https://oauth-openshift.apps."{{ cluster_name }}".dragonslair.dev/oauth2callback/myapp"
              clientId: openshift
              implicitFlowEnabled: false
              secret: "{{ keycloak_client_secret }}"
              publicClient: false
              standardFlowEnabled: true
              directAccessGrantsEnabled: false
          displayName: openshift
          enabled: true
          id: openshift
          identityProviders:
            - alias: github
              config:
                clientId: "{{ oauth_client_id }}"
                clientSecret: "{{ oauth_client_secret }}"
                syncMode: IMPORT
                useJwksUrl: 'true'
              enabled: true
              firstBrokerLoginFlowAlias: first broker login
              providerId: github
          realm: openshift

